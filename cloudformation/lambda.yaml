AWSTemplateFormatVersion: '2010-09-09'
Description: Integrtion Lambda Template
Parameters:
  CIDR:
    Type: "String"
    Description: "IP address range of the internal network"
  Subnet:
    Type: "String"
    Description: "Subnet for instances"
  Bucket:
    Type: "String"
    Description: Availability Zone for the instance
  Name:
    Type: String
    Description: Unique Name of the Lambda to be deployed
  Version:
    Type: String
    Description: StackVersion
  AZ:
    Type: "String"
    Description: Availability Zone for the instance
  Key:
    Type: "String"
    Description: The security key for ssh
  Vpc:
    Type: "String"
    Description: "VPC ID"


Resources:
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref Bucket
        S3Key: !Join
          - ''
          - - lambda/
            - !Ref Name
            - '-'
            - !Ref 'Version'
            - .zip
      Description: !Join [' ',[!Ref Name, "lambda"]]
      FunctionName: !Join ['-',[!Ref Name, "lambda"]]
      Handler: !Join ['.',[!Ref Name, "lambda_handler"]]
      MemorySize: 128
      Role: !GetAtt 'LambdaRole.Arn'
      Runtime: python3.6
      TracingConfig:
        Mode: Active
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroup
        SubnetIds:
          - !Ref Subnet
      Timeout: 300
      Tags:
        - Key: version
          Value: !Ref 'Version'

  LambdaAlias:
    Type: AWS::Lambda::Alias
    Properties:
      Name: !Join ['-',[ !Ref Name, "Lambda"]]
      Description: !Join [' ',[ !Ref Name, "lambda"]]
      FunctionName: !Ref 'Lambda'
      FunctionVersion: "$LATEST"


  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName:  !Join ['-',[ !Ref Vpc ,!Ref Name, "lambda-policy"]]
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Join ['-',[ "arn:aws:s3:::", !Ref Bucket ]]
              - Sid: ec2
                Effect: Allow
                Action:
                  - ses:*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ec2:*
                Resource: '*'
              - Sid: xray
                Effect: Allow
                Action:
                  - xray:*
                Resource: '*'
              - Sid: sqs
                Effect: Allow
                Action:
                  - sqs:*
                Resource: '*'

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Join ['-',[ !Ref Vpc, "lambda-network-range"]]
      GroupDescription: !Join [' ',[ "Lambda up to the internal network range"]]
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref CIDR
          Description: Internal Network

Outputs:
  Lambda:
    Description: "lambda arn"
    Value: !GetAtt Lambda.Arn
    Export:
      Name: !Join [':',[ !Ref Vpc ,!Ref Name, "lambda"]]
