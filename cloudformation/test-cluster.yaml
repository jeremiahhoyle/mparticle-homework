AWSTemplateFormatVersion: "2010-09-09"
Description: mParticle Test Cluster

Parameters:
  Vpc:
    Type: "String"
    Description: "VPC ID"
  CIDR:
    Type: "String"
    Description: "IP address range of the internal network"
  Subnet:
    Type: "String"
    Description: "Subnet for instances"
  AZ:
    Type: "String"
    Description: Availability Zone for the instance
  Key:
    Type: "String"
    Description: The security key for ssh
  Bucket:
    Type: "String"
    Description: Bucket to deploy to



Resources:


  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones:
        - !Ref AZ
      VPCZoneIdentifier:
        - !Ref Subnet
      LaunchConfigurationName: !Ref "LaunchConfiguration"
      DesiredCapacity: 2
      MinSize: 1
      MaxSize: 2
      Tags:
        - Key: Name
          Value: "test-cluster"
          PropagateAtLaunch: True



  LaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: ami-095cd038eef3e5074
      AssociatePublicIpAddress: false
      KeyName: !Ref "Key"
      IamInstanceProfile:
        !Ref "InstanceProfile"
      InstanceType: t2.small
      InstanceMonitoring: "false"
      SecurityGroups:
        - !Ref SecurityGroup
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - - "#!/bin/bash"
              - "set -o errexit"
              - "set -o xtrace"
              - "yum update -y"
              - "yum install -y git"
              - "yum install -y python3"
              - "git clone https://github.com/jeremiahhoyle/mparticle-homework.git /root/mparticle-homework"
              - "pip3 install -r /root/mparticle-homework/requirements.txt"
              - "chmod +x /root/mparticle-homework/run_command.py"
              - "mkdir /root/.aws"
              - "cp /root/mparticle-homework/aws.conf /root/.aws/config"
              - !Join ['',[ "echo 'region = ", !Ref "AWS::Region", "' >> /root/.aws/config" ]]


  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles: [ !Ref "InstanceRole" ]

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Join ['-',[ !Ref Vpc, "internal-network-range"]]
      GroupDescription: !Join [' ',[ "Instance up to the internal network range"]]
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref CIDR
          Description: Internal Network

  InstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "EcsService"
          PolicyDocument:
            Statement:
              - Sid: Logs
                Effect: "Allow"
                Resource: "*"
                Action:
                - logs:*
              - Sid: ssm
                Effect: Allow
                Action:
                - ssm:*
                - ssmmessages:CreateControlChannel
                - ssmmessages:CreateDataChannel
                - ssmmessages:OpenControlChannel
                - ssmmessages:OpenDataChannel
                Resource: '*'

              - Sid: GetEncryption
                Effect: Allow
                Action:
                - s3:GetEncryptionConfiguration
                Resource: '*'

              - Sid: cloudwatch
                Effect: "Allow"
                Resource: '*'
                Action:
                - "cloudwatch:PutMetricData"

              - Sid: ec2messages
                Effect: "Allow"
                Resource: '*'
                Action:
                - ec2messages:*